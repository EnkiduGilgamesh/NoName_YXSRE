【说明】本教程转载自贴吧浅觞（tanyuanjkl）的帖子，已获得原作者授权，未经过允许请勿转载
分割
【『1』名词解释:
1.1 基本名词】
order:『优先级』,用来设定技能发动的优先程度,此程度以卡牌使用的优先级为参考。
为了实现合理的牌序(例如先拆后顺再杀),须将每种卡牌设定一个优先级,优先级越大的
卡牌ai会优先使用,技能也是如此,例如枪舞,新苦肉等技能的优先级须高一些,因为等你杀
了一刀再判“枪舞”或者酒红杀都用了再“苦肉”是没什么意义的。合理的优先级如下图:
例如拆的优先级为9,顺为7,杀为4:
-10(枪舞)--9(拆)--8(苦肉)--7(顺)--6--5--4(杀)--;
expose:『身份暴露程度』,取值范围为0~1,用于帮助AI判断身份,AI中未写expose其他AI将会无法判断其身份;
threaten:『嘲讽值』,嘲讽值越大的角色越容易遭受到敌方的攻击,默认为1,一般在0~4中取值即可(缔盟threaten值为3);
respondShan:true,『响应闪』,作用是告诉AI手里没『闪』也可能出『闪』,防止没『闪』直接掉血;
respondSha:true,与respondShan类似;
save:true,告诉AI可能救人,防止没桃xxx;
maixie:true,技能标签『卖血』,用于其他AI检测是否是卖血流(if(target.hasSkillTag('maixie')))。并非加了这个AI就会卖血;
noh:true,技能标签『无牌』,目前只出现在“连营”和“伤逝”中,用于其它AI检测是否含有标签『无牌』,从而告诉其他AI不要拆迁(因为生生不息)。
分割
【1.2 AI获取(玩家):】
ai.get.attitude(玩家1,玩家2):『态度值检测』检测玩家1对玩家2的态度值;
ai.get.effect(target,content,player,viewer):『效果检测』检测牌/技能对目标角色的效果值,content代表卡牌或者技能,例如
{name:'sha'}/'挑衅';viewer代表视角,一般填player或者target,例如我方杀敌方满血『曹丕』,对我方来说是负效果,但对敌方是正效果,
视角决定效果的正负。
ai.get.damageEffect(玩家1,玩家2,viewer,nature):『检测伤害效果』这里检测的是[玩家2对玩家1]的伤害效果,nature代表属性(雷/火);
ai.get.recoverEffect(玩家1,玩家2,viewer):『检测回复效果』 与上段类似;
补充:这句的viewer假如省略不写，viewei默认为玩家player,公式为:总效果=对使用者的收益值*使用者对自己的att+对目标的收益值*使用者对目标的att; 假如viewer不为player,公式为:总效果=对使用者的收益值*使用者对自己的att+对目标的收益值*viewer对目标的att;
分割
【1.3 AI获取(卡牌)：】
useful：回合外留牌的价值(弃牌阶段按useful顺序选)
value：牌的使用价值(五谷按value顺序选)
举例:ai.get.useful(card)/ai.get.value(card)
分割
【『2』AI的分类与写法：
2.1 AI的合理位置】
1.AI须选择角色/卡牌/按钮等等时
2.check中检测条件时的收益时
3.主动技的结尾,用来检测是否发动和对谁发动
4.需要声明有某技能时某牌的使用效果发生改变时(大部分是卖血技)
分割
【2.2 不同位置的AI写法
2.2.1 选择(choose类)】
target.chooseToDiscard().ai=function(card){
return 8-ai.get.value(card);
}
return 8-ai.get.value(card)这句是告诉AI如果手里有价值小于8的牌就弃置,否则不弃置
弃置的规则是价值越小的牌优先丢,一个return 5和return 3 AI会选return 5的卡牌。
当return值不大于0时,例如最后一张手牌价值为9 (return 8-9)=-1,AI将会放弃。
target.chooseTarget().ai=function(target){
return ai.get.attitude(player,target);
}
同理,att值越大的会优先选。注意att值只与身份有关,一个鲁肃一个于禁队友,并不一定会选鲁肃。
player,chooseControl('摸牌','回血').ai=function(event,player){
if(player.hp>=2) return '摸牌';
return '回血';
}
分割
【2.2.2 检测(check类)：】
举例：『魅步』
check:function(event,player){
if(ai.get.attitude(player,event.player)>=0) return false;
//对当前角色态度大于等于0,不发动;
var e2=player.get('e','2');
//定义一个变量e2代表获取玩家的装备区的防具;
if(e2){
if(e2.name=='tengjia') return true;
if(e2.name=='bagua') …
return true;
//有藤甲和八卦就发动。。。老大这是瞧不起仁王吗。。。。
}
return player.num('h','shan')>0;
//如果上述条件均不满足,如果玩家手里有『闪』 发动,否则不发动;
},
发动技能规则:check最终的return值大于0; 
举例:『峻刑』(这是个主动技,不过也需要check决定是否发动)
check:function(card){
if(ui.selected.cards.length) return -1;
//告诉AI只选一张牌;
if(get.type(card)=='basic') return 8-ai.get.value(card);
//只有价值小于8的基本牌可被选;
return 5-ai.get.value(card);
//如果手中有价值小于5的牌就发动,否则不发动;
},
补充
触发技如果没写check的话默认发动
分割
【2.2.3 主动技结尾】
一般格式为:
ai:{
order:xx,
threaten:xx,
//上述为定义/标签
result:{
player:xx;
target:xx;
}
//收益值
}
分割
【 2.2.4 卖血技能】
一般格式为:
ai:{
maixie:true,
threaten:xx,
//上述为定义/标签
effect:{
xx;
}
//效果值的重新定义
}
更多内容详见第三章『收益论』;
分割
【 『3』收益论
3.1 收益论用途】
1.告诉AI会发动技能,
2.告诉AI会卖血,
3.告诉AI倾向于卡牌/行为,
分割
【 3.2 收益论名词:】
result:『收益』收益值未在AI声明默认为0(对玩家对目标均是如此).收益值可以直接在AI声明;
result在player部分里声明就是对玩家的收益,在target部分里声明就是对目标的收益;
effect:『效果』效果值为正代表正效果,反之为负效果,AI会倾向于最大效果的目标/卡牌;
attitude:『态度』态度只由identity决定。不同身份对不同身份的att不同。例如在身份局中,主对忠att值为6,
忠对主att值为10;
分割

【3.3 收益论应用:
3.3.1 〖主动技〗:】
•如果技能发动无须指定目标: effect=result*ai.get.attitude(player,player);
即: 总效果=收益值*使用者对自己的att;
举例『制衡』:
ai:{
result:{
player:1
}}
*由于制衡基本是每回合都会发动,所以AI中将『收益值』直接定为1,假设孙权对自己的att为10,这将代表：
总效果=(1)收益值*(10)=10;由于效果值为正(正收益) 所以AI将会发动『制衡』
举例『急袭』:
ai:{
order:10,
result:{
player:function(player){
return player.storage.tuntian.length-1;
}}}
*这个很容易看出来,只有一个田就不发动了...只要田大于1,对使用者就是正收益,再乘以对自己的att,也是正效果,所以AI将会发动『急袭』
•如果技能发动须指定目标
总效果=对使用者的收益值*使用者对自己的att+对目标的收益值*使用者对目标的att;
实际还会考虑嘲讽值,这里简化了;
举例『挑衅』:
ai:{
order:4,
expose:0.2,
threaten:1.1,
result:{
target:-1,
//直接定义目标的收益值为-1,
player:function(player,target){
if(target.num('h')==0) return 0;
if(target.num('h')==1) return -0.1;
if(player.hp<=2) return -2;
if(player.num('h','shan')==0) return -1;
return -0.5;
//上述表示目标角色不同的情况,玩家将会return不同的收益值;
}}}
『挑衅』是一个作死技,技能发动对自己没有正收益,只会给目标角色带来负收益。所以
player部分中收益值最大也不会超过0,因为是弃置对方一张牌,所以直接将目标角色的收益
定为了-1;如果对自己的负收益大于对敌方的负收益的话,姜维将不会发动『挑衅』
举例『排异』:
ai:{
order:1,
result:{
target:function(player,target){
if(player!=target) return 0;
if(player.num('h')+2<=player.hp+player.storage.quanji.length) return 1;
return 0;
}}}
『排异』为什么没有声明player部分呢,因为除非你排异自己,否则你自己是没收益的,只是对你选择的目标
有收益(摸2牌)。
分割
【3.3.2 〖卖血技〗】
总效果=对使用者的收益值*使用者对自己的att+对目标的收益值*使用者对目标的att;
实际还会考虑嘲讽值,这里简化了;
ai.effect：告诉ai有某技能时某牌的使用效果发生改变,
设对目标的原收益为n,对使用者的原收益为n',n>0代表正收益,n<0代表负收益;
函数传入4个参数,分别为卡牌、使用者、目标以及n;
返回值可有3种形式
1. 一个数a,对目标总的收益为a*n;
2. 一个长度为2的数组[a,b],对目标的总收益为a*n+b;
3. 一个长度为4的数组[a,b,c,d],对目标的总收益为a*n+b,对使用者的总收益为c*n'+d;
假设n代表火杀对目标的效果
1. 技能为防止火焰伤害：return 0;
2. 技能为防止火焰伤害并令目标摸一张牌：return [0,1];
3. 技能为防止火焰伤害并令使用者弃置一张牌：return [0,0,1,-1];
举例『遗计』:
ai:{
maixie:true,
effect:{
target:function(card,player,target){
if(get.tag(card,'damage')){
if(player.skills.contains('jueqing')) return [1,-2];
if(!target.hasFriend()) return;
//如果没有存活队友,也就是说你方阵营就你一个活着的了,直接跳出effect,避免单挑永远不杀你;
if(target.hp>=4) return [1,get.tag(card,'damage')*2];
if(target.hp==3) return [1,get.tag(card,'damage')*1.5];
if(target.hp==2) return [1,get.tag(card,'damage')*0.5];
//以『杀』为例,杀对目标角色为-1.5收益,计算效果得:
4血及以上:-1.5*1+2=0.5 正收益;
3血:-1.5*1+1.5=0 无收益;
2血:-1.5*1+0.5=-1 负收益;
}}}}
这个get.tag是什么意思呢？其实和技能标签一样,卡牌也有自己的标签,例如
杀:{
tag:{
respond:1,
respondShan:1,
damage:function(card){
if(card.nature=='poison') return;
return 1;
}}}
为了方便删了一些tag,那么『杀』有如下tag:respond;respondShan;damage等等,所以get.tag(card,'damage')
代表有伤害属性的卡牌,例如杀,南蛮,决斗等等。
*特别注意ai里面的effect是上帝视角,target不代表目标角色,player也不代表拥有此技能的玩家本身,
因为effect是写给别的AI看的,所以target代表玩家本身,player代表其他人,可以是正在犹豫是否要杀
你的任何一位玩家。
那么队友会杀卖血流队友还是杀敌方呢？还是套公式:
总效果=对使用者的收益值*使用者对自己的att+对目标的收益值*使用者对目标的att;
因为『杀』对使用者是没收益的,所以公式变为:
总效果=对目标的总收益值*使用者对目标的att;
比如杀对目标角色的收益是-1.5,满血曹丕的effect是return [0.5,1],那最终的收益是0.25,如果对曹丕的attitude是1,对某白板敌人的attitude是-1,那杀曹丕的效果为1*0.25,
杀敌人的效果为-1*-1.5,所以最终会选敌人(实际稍复杂点,详见ai.get.effect函数)
分割
【3.3.2 〖倾向技〗】
这个占比例非常少,略说明一下
举例『忘隙』:
ai:{
effect:{
player:function(card,player){
if(card.name=='nanman'||card.name=='wanjian') return [1,3];
}}}
这里的意思是尽量放南蛮万剑之类,类似的,激昂也是强调AI尽量用红杀;
因为上述AI中effect里面的为player,所以代表的是对使用者的收益。
分割
【3.4收益论的检验】
enable:'phaseUse',
filterTarget:true,
content:function(){
game.log(player,'对',target,'的att是',ai.get.attitude(player,target));
game.log(player,'对',player,'的att是',ai.get.attitude(player,player));
game.log(player,'对',target,'发动【测试】的eff是',ai.get.effect(target,'测试',player,player));
game.log(player,'对',target,'使用【杀】的eff是',ai.get.effect(target,{name:'sha'},player,player));
},
ai:{
result:{
target:-10,
player:-2,
},
effect:{
player:function(card,player){
if(card.name=='sha') return [0,1];
}
}
}
补充
实际运算中会考虑到嘲讽值，不过和原结果相差不大，收益论得以验证
分割
【题外话】
_status.event.parent:
_status.event.parent可以理解成当前事件的上一级，以神郭嘉乐不思蜀开始判定为例:事件的完整流程如下:判定阶段开始，神郭嘉发动天启，于是:
_status.event.name=='天启_f4';
那么当前事件的上一级是什么呢，是useSkill,只有神郭嘉使用技能后才能有后来的天启，所以:
_status.event.parent.name=='useSkill';
以此类推即可